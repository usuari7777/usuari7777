<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

<!-- Begin Jekyll SEO tag v2.7.1 -->
<title>Validación de documentos | Diseño web con HTML y CSS</title>
<meta name="generator" content="Jekyll v3.9.0" />
<meta property="og:title" content="Validación de documentos" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Curso de diseño web con HTML y CSS. Escrito por May Calle y Nacho Iborra profesores de ciclos formativos de Formación Profesional en el I.E.S. San Vicente (San Vicente del Raspeig, Alicante, España)" />
<meta property="og:description" content="Curso de diseño web con HTML y CSS. Escrito por May Calle y Nacho Iborra profesores de ciclos formativos de Formación Profesional en el I.E.S. San Vicente (San Vicente del Raspeig, Alicante, España)" />
<link rel="canonical" href="02c.html" />
<meta property="og:url" content="http://nachoiborraies.github.io/htmlcss/md/es/02c.html" />
<meta property="og:site_name" content="Diseño web con HTML y CSS" />
<meta name="twitter:card" content="summary" />
<meta property="twitter:title" content="Validación de documentos" />
<script type="application/ld+json">
{"headline":"Validación de documentos","description":"Curso de diseño web con HTML y CSS. Escrito por May Calle y Nacho Iborra profesores de ciclos formativos de Formación Profesional en el I.E.S. San Vicente (San Vicente del Raspeig, Alicante, España)","url":"http://nachoiborraies.github.io/htmlcss/md/es/02c.html","@type":"WebPage","@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->

    <link rel="stylesheet" href="../../assets/css/style.css?v=159a75899bb45ca1653a328628ff03bbb89ee555">
    <!-- start custom head snippets, customize with your own _includes/head-custom.html file -->

<!-- Setup Google Analytics -->



<!-- You can set your favicon here -->
<!-- link rel="shortcut icon" type="image/x-icon" href="/htmlcss/favicon.ico" -->

<!-- end custom head snippets -->

  </head>
  <body>
    <div class="container-lg px-3 my-5 markdown-body">
      
      <h1><a href="../../index.html">Diseño web con HTML y CSS</a></h1>
      

      <h1 id="validación-de-documentos">Validación de documentos</h1>

<div style="text-align: right">
<a target="_blank" href="slides/02c.html"><img src="../../img/diapositivas.png" width="32" /></a>&nbsp;&nbsp;
<a target="_blank" href="02c.pdf"><img src="../../img/pdf.png" width="32" /></a>
</div>

<p>Como hemos comentado anteriormente, la sintaxis de HTML 4 y xHTML está basada en un DTD, y por tanto, se trata de una sintaxis más estricta que HTML 5. A continuación se muestran algunos ejemplos que muestran estas diferencias:</p>

<ul>
  <li>En <strong>HTML 4</strong> y <strong>xHTML</strong>, todos los elementos se tienen que cerrar para ser válidos, tanto con una etiqueta de cierre correspondiente (como <code class="language-plaintext highlighter-rouge">&lt;/body&gt;</code>) como, en el caso de elementos vacíos, con una barra inclinada al final de la etiqueta (como <code class="language-plaintext highlighter-rouge">&lt;br/&gt;</code>). Con <strong>HTML 5</strong> ya no es necesario añadir a los elementos vacíos una barra inclinada para su validación.</li>
  <li>En <strong>HTML 4</strong> y <strong>xHTML</strong>, todos los atributos tienen que tener valores, incluso si son redundantes, mientras que en <strong>HTML 5</strong> los atributos de tipo <em>verdadero ó falso</em> se pueden especificar sin ningún valor.</li>
  <li>En <strong>HTML 5</strong> se pueden emplear nombres de etiquetas o atributos en minúscula, mayúscula o una mezcla de ambas, así como valores de atributos entre comillas o sin comillas (siempre y cuando esos valores no contengan espacios u otros caracteres reservados), mientras que en xHTML no.</li>
</ul>

<h2 id="1-algunas-pautas-básicas">1. Algunas pautas básicas</h2>

<p>En general, vemos que HTML 5 es mucho más flexible a la hora de validar sus documentos, al menos en lo que se refiere a la sintaxis. Sin embargo, conviene seguir un estilo de sintaxis y ajustarse a él, especialmente si se trabaja en equipo, donde el mantenimiento y la legibilidad del código son cruciales.</p>

<p>Algunas directrices que se podrían considerar son las siguientes:</p>

<ul>
  <li>Emplear minúsculas para todos los elementos y atributos, como en xHMTL.</li>
  <li>Aunque algunos elementos no requieren etiquetas de cierre, recomendamos que todos los elementos que incluyan contenido se cierren (como en <code class="language-plaintext highlighter-rouge">&lt;p&gt;texto&lt;/p&gt;</code>)</li>
  <li>Aunque se pueden dejar valores de atributo sin comillas, es muy probable que usemos algunos que sí las necesiten. Por tanto, se recomienda que siempre las utilicemos para mantener la coherencia. En concreto, utilizaremos comillas <em>dobles</em> para definir el valor de los atributos.</li>
  <li>Omitir la barra inclinada final de los elementos que no tienen contenido (como <code class="language-plaintext highlighter-rouge">&lt;meta&gt;</code>)</li>
  <li>Evitar proporcionar valores redundantes para atributos de tipo <em>verdadero ó falso</em>, principalmente utilizados en algunas etiquetas HTML destinadas a campos de formulario, y que veremos más adelante.</li>
</ul>

<h2 id="2-herramientas-de-validación">2. Herramientas de validación</h2>

<p>Los programadores que trabajan con lenguajes de programación deben corregir su código antes de continuar, ya que de lo contrario no se podrá utilizar el programa. Sin embargo, en los lenguajes de marcas, como HTML, los navegadores son más permisivos, y cuando encuentran un error tratan de intuir lo que se quiso decir y continúan con la carga del documento. Se trata de lenguajes más flexibles a errores pero que puede provocar algunos problemas estéticos y/o funcionales.</p>

<p>Para evitar esto y asegurarnos de que nuestro código está correctamente escrito, se utiliza un <strong>validador HTML</strong>. Se trata de una herramienta que analiza nuestro código y nos dice los errores que tenemos, junto a una breve descripción de los mismos.</p>

<h3 id="21-validador-online-de-w3c">2.1. Validador online de W3C</h3>

<p>Podemos utilizar el <a href="https://validator.w3.org/"><strong>validador oficial del W3C</strong></a>, que contiene <strong>Nu HTML Checker</strong>, un validador de HTML5 en fase experimental, pero que puede usarse sin problemas para la búsqueda de errores.</p>

<div align="center">
    <img src="../../img/02_html_validator.PNG" alt="Servicio de validación de lenguajes de marcado del W3C" width="60%" />
</div>

<p>Como vemos, existen tres formas de pasar el validador:</p>

<ul>
  <li><strong>Validate by URI</strong>: se indica la dirección URI de la página que se quiere validar.</li>
  <li><strong>Validate by file upload</strong>: se selecciona el archivo HTML de nuestro equipo, se sube al validador y se realiza el análisis.</li>
  <li><strong>Validate by direct input</strong>: se escribe directamente el código HTML en el área de texto habilitada, y se analiza dicho código.</li>
</ul>

<p>Además, si nos fijamos en la parte inferior de la herramienta de validación, vemos la opción <strong><em>More options</em></strong> donde podemos personalizar el análisis eligiendo el tipo de codificación de caracteres, el tipo de documento (<em>HTML 5</em>, <em>xHTML 1.0</em>, <em>HTML 4.01</em>, …) y personalizar la página de resultados.</p>

<div align="center">
    <img src="../../img/02_html_validator_more_options.PNG" alt="Opciones adicionales del validador HTML del W3C para personalizar la página de resultado" width="60%" />
</div>

<p>Si pasamos el validador a la <a href="https://iessanvicente.com/">página web del I.E.S. San Vicente</a>, por ejemplo, obtenemos el siguiente resultado:</p>

<div align="center">
    <img src="../../img/02_nu_html_checker_bad_result.PNG" alt="Ejemplo de uso de Nu HTML Checker" width="60%" />
</div>

<p>Como vemos, la página tiene dos errores, ambos relacionados con atributos del elemento <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code>.</p>

<p>Es una buena práctica acostumbrarse a utilizar el validador para crear código HTML de calidad y sin errores, ya que si tenemos documentos sin errores de validación, es más probable que se vean correctamente en cualquier tipo de dispositivo.</p>

<h3 id="22-extensiones-para-vs-code">2.2. Extensiones para VS Code</h3>

<p>En el editor <strong>VS Code</strong> podemos encontrar el paquete <a href="https://marketplace.visualstudio.com/items?itemName=CelianRiboulet.webvalidator">W3C Web Validator</a>, que permite analizar los documentos HTML directamente desde el editor. Una vez instalado, verás que aparece en la parte izquierda de la barra de estado un icono nuevo, llamado <em>W3C validation</em>.</p>

<div align="center">
    <img src="../../img/02_w3c_validation.PNG" alt="VSCode con W3C Web Validator instalado" width="80%" />
</div>

<p>Para validar un documento que tengamos creado, basta con pulsar sobre dicho icono y comenzará la validación. Si se detectan errores, éstos aparecen directamente en el documento. Además, todos los errores y advertencias vienen con una descripción que ayuda a corregirlos.</p>

<blockquote>
  <p><strong>Ejercicio 1:</strong></p>

  <p>Instala la extensión <em>W3C Web Validator</em> en VS Code y crea un documento HTML, llamado <strong>validacion.html</strong>, con el siguiente código. Pasa el validador y corrige los errores que encuentres:</p>
</blockquote>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE &gt;</span>
<span class="nt">&lt;html&gt;</span>    
    <span class="nt">&lt;body&gt;</span>
        <span class="nt">&lt;head&gt;</span> Ejemplo de validacion HTML <span class="nt">&lt;/head&gt;</span>             
        <span class="nt">&lt;h2&gt;</span> Mi página web <span class="nt">&lt;/h2&gt;</span>
        <span class="nt">&lt;ol&gt;</span>
            <span class="nt">&lt;li&gt;</span> Inicio
            <span class="nt">&lt;li&gt;</span> Sobre mí <span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;li&gt;</span> Lenguajes de programación que domino: <span class="nt">&lt;/li&gt;</span>
                <span class="nt">&lt;ul&gt;</span>
                    <span class="nt">&lt;li&gt;</span> Java <span class="nt">&lt;/li&gt;</span>
                    <span class="nt">&lt;li&gt;</span> Python <span class="nt">&lt;/li&gt;</span>
                    <span class="nt">&lt;li&gt;</span> C# <span class="nt">&lt;/li&gt;</span>
                <span class="nt">&lt;/ul&gt;</span>                        
        <span class="nt">&lt;/ol&gt;</span>        
    <span class="nt">&lt;/body&gt;</span>
</code></pre></div></div>


      
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/anchor-js/4.1.0/anchor.min.js" integrity="sha256-lZaRhKri35AyJSypXXs4o6OPFTbTmUoltBbDCbdzegg=" crossorigin="anonymous"></script>
    <script>anchors.add();</script>
  </body>
</html>
